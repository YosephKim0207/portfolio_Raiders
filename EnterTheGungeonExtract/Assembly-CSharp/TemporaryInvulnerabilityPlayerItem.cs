using System;
using System.Collections;
using UnityEngine;

// Token: 0x020014D7 RID: 5335
public class TemporaryInvulnerabilityPlayerItem : PlayerItem
{
	// Token: 0x0600794B RID: 31051 RVA: 0x00308B78 File Offset: 0x00306D78
	protected override void DoEffect(PlayerController user)
	{
		AkSoundEngine.PostEvent("Play_OBJ_powerstar_use_01", user.gameObject);
		Material[] array = user.SetOverrideShader(ShaderCache.Acquire("Brave/Internal/RainbowChestShader"));
		for (int i = 0; i < array.Length; i++)
		{
			if (!(array[i] == null))
			{
				array[i].SetFloat("_AllColorsToggle", 1f);
			}
		}
		user.StartCoroutine(this.HandleDuration(user, array[0]));
	}

	// Token: 0x0600794C RID: 31052 RVA: 0x00308BF4 File Offset: 0x00306DF4
	private IEnumerator HandleDuration(PlayerController user, Material userMaterial)
	{
		base.IsCurrentlyActive = true;
		float ela = 0f;
		this.m_activeDuration = this.Duration;
		this.m_activeElapsed = ela;
		while (ela < this.Duration)
		{
			ela += BraveTime.DeltaTime;
			this.m_activeElapsed = ela;
			user.healthHaver.IsVulnerable = false;
			yield return null;
		}
		user.ClearOverrideShader();
		user.healthHaver.IsVulnerable = true;
		base.IsCurrentlyActive = false;
		AkSoundEngine.PostEvent("Stop_SND_OBJ", user.gameObject);
		yield break;
	}

	// Token: 0x0600794D RID: 31053 RVA: 0x00308C18 File Offset: 0x00306E18
	protected override void OnDestroy()
	{
		base.OnDestroy();
	}

	// Token: 0x04007BC2 RID: 31682
	public float Duration = 5f;
}
